use('mongo_bodegas');
db.createCollection('users',
    {
        capped: true,
        size: 1000,
        max: 10,
        validator: {
            $jsonSchema: {
                required: [
                    "nombre",
                    "email",
                    "estado",
                    "password"
                ],
                properties: {
                    nombre: {
                        bsonType: "string",
                        description: "El campo nombre es requerido y este debe ser un string mayor a 4 carácteres y menor a 41"
                    },
                    email: {
                        bsonType: "string",
                        description: "El campo email debe ser de tipo string"
                    },
                    estado: {
                        bsonType: "string",
                        description: "El campo 'estado' debe ser string"
                    },
                    email_verified_at: {
                        bsonType: "date",
                        description: "el campo de verificación del email debe de ser tipo date con la estructura YYYY-MM-DD"
                    },
                    foto: {
                        bsonType: "string",
                        description: "el campo de la foto debe de ser string"
                    },
                    created_by: {
                        bsonType: "date",
                        description: "el campo 'creado por' debe de ser tipo date con el formato YYYY-MM-DD"
                    },
                    updated_by: {
                        bsonType: "date",
                        description: "el campo 'actualizado por' debe de ser tipo date con el formato YYYY-MM-DD"
                    },
                    deleted_by: {
                        bsonType: "string",
                        description: "el campo de eliminación debe de ser de tipo string"
                    },
                    password: {
                        bsonType: "string",
                        description: "el campo constraña debe de ser de tipo string y puede contener carácteeres especiales"
                    }
                }
            }
        }
});
use('mongo_bodegas');
db.users.insertMany([
    {
        nombre: "Juan",
        email: "juanperez@example.com",
        foto: "https://example.com/juanperez.jpg",
        estado: "activo",
        email_verified_at: ISODate("2023-08-22T02:19:23.000Z"),
        created_by: ISODate("2023-08-22T02:19:23.000Z"),
        updated_by: ISODate("2023-08-22T02:19:23.000Z"),
        deleted_by: '',
        password: "micontraseña123"
    },
    {
        nombre: "David",
        email: "juanavila856@gmail.com",
        foto: "../../assets/img/users/imagen_1.jpg",
        estado: "inactivo", // Corrección: Cambiar "innactivo" a "inactivo"
        email_verified_at: ISODate("2023-08-15T00:00:00Z"),
        created_by: ISODate("2023-08-15T00:00:00Z"),
        updated_by: ISODate("2023-08-15T00:00:00Z"),
        deleted_by: '',
        password: "minionculion123"
    },
    {
        nombre: "Josue",
        email: "juanavila8856@gmail.com",
        foto: "../../assets/img/users/imagen_1.jpg",
        estado: "activo",
        email_verified_at: ISODate("2023-08-15T00:00:00Z"),
        created_by: ISODate("2023-08-15T00:00:00Z"),
        updated_by: ISODate("2023-08-15T00:00:00Z"),
        deleted_by: '',
        password: "minionculion123"
    },
    {
        nombre: "Ana",
        email: "ana@example.com",
        foto: "../../assets/img/users/imagen_2.jpg",
        estado: "activo",
        email_verified_at: ISODate("2023-08-15T00:00:00Z"),
        created_by: ISODate("2023-08-15T00:00:00Z"),
        updated_by: ISODate("2023-08-15T00:00:00Z"),
        deleted_by: '',
        password: "password123"
    },
    {
        nombre: "Carlos",
        email: "carlos@example.com",
        foto: "../../assets/img/users/imagen_3.jpg",
        estado: "inactivo",
        email_verified_at: ISODate("2023-08-15T00:00:00Z"),
        created_by: ISODate("2023-08-15T00:00:00Z"),
        updated_by: ISODate("2023-08-15T00:00:00Z"),
        deleted_by: '',
        password: "securepass456"
    }
]);

use('mongo_bodegas');
db.createCollection('bodegas', {
    capped: true,
    size: 900,
    max: 220,
    validator: {
        $jsonSchema: {
            type: "object",
            required: [
                "id_bodega",
                "nombre",
                "estado",
                "responsable",
                "created_at",
                "updated_at",
                "deleted_at"
            ],
            properties: {
                id_bodegas: {
                    bsonType: "int",
                    description: "id field just could be interger type"
                },
                nombre: {
                    bsonType: "string",
                    pattern: "^[A-Za-z0-9\-]+$",
                    description: "the bodega name just could be string type and just could contain letters, numbers and the simbol '-'"
                },
                resposable: {
                    bsonType: "string",
                    description: "responable field must be string type"
                },
                created_at: {
                    bsonType: "date",
                    description: "create_at field must be date type"
                },
                updated_at: {
                    bsonType: "date",
                    description: "uptade_at field must be date type"
                },
                deleted_at: {
                    bsonType: "string",
                    description: "delete_at field must be null o string type"
                }
            }
        }
    }
});

use('mongo_bodegas');
db.createCollection('productos', {
    capped: true,
    size: 900,
    max: 10,
    validator: {
        $jsonSchema: {
            type: 'object',
            required: [
                "id_productos",
                "nombre",
                "descripcion",
                "estado",
                "created_at",
                "updated_at",
            ],
            properties: {
                id_productos: {
                    bsonType: "int",
                    description: "id_pro must be interger type",
                },
                nombre: {
                    bsonType: "string",
                    description: "product name must be string type"
                },
                estado: {
                    bsonType: "string",
                    description: "product status must be string type"
                },
                created_at: {
                    bsonType: "date",
                    description: "product creation at must be date type"
                },
                updated_at: {
                    bsonType: "date",
                    description: "product update at must be date type"
                },
                deleted_at: {
                    bsonType: "string",
                    description: "deleted product at must be string or null type"
                }
            }
        }
    }
});